*,
*::before,
*::after {
  box-sizing: border-box;
}

:root {
  --items: min(30rem, 80vw);
  --color-base: #181213;
  scroll-timeline: --page block;

  @media (prefers-reduced-motion: no-preference) {
    scroll-behavior: smooth;
  }
}

body {
  font: 300 1rem/1.33 'Helvetica';
  color: var(--color-base);
  display: grid;
  overflow-x: hidden;
}

img {
  max-inline-size: 100%;
  block-size: auto;
}

hr[id] {
  border: 0;
  margin: 0;
}

main {
  height: 0px;
}

/* animations */

@keyframes clip {
  to {
    transform: scale(1.75);
  }
}

@keyframes scroll {
  to {
    translate: calc((var(--items) * -3) + 15vw) 0;
  }
}

@keyframes moveup {
  to {
    transform: translateY(var(--moveup));
  }
}

@keyframes reveal {
  85%,
  100% {
    opacity: 1;
  }

  100% {
    transform: translateY(0);
  }
}

body > svg {
  block-size: 0;
  inline-size: 0;

  clipPath {
    transform-origin: calc(50vw * var(--dpr, 1)) calc(50vh * var(--dpr, 1));

    @media (min-resolution: 1.5dppx) {
      --dpr: 1.5;
    }

    @media (min-resolution: 2dppx) {
      --dpr: 2;
    }

    @media (min-resolution: 2.4dppx) {
      --dpr: 2.4;
    }

    @media (min-resolution: 2.75dppx) {
      --dpr: 2.75;
    }

    @media (min-resolution: 3dppx) {
      --dpr: 3;
    }

    @media (min-resolution: 3.5dppx) {
      --dpr: 3.5;
    }

    @media (min-resolution: 4dppx) {
      --dpr: 4;
    }

    transform: scale(0);
    animation: linear clip 1 forwards;
    animation-timeline: --page;
    animation-range: entry 10dvb exit 100dvb;
  }
}

/* header */

header {
  position: fixed;
  z-index: 1;
  inset: 0 0 auto 0;
  background: #fff;

  > div {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1rem 2rem;
    margin: 0 10vw;
    border-bottom: 1px solid;
    padding-block: 2rem;
  }

  svg {
    inline-size: 8rem;
  }

  ul {
    display: flex;
    gap: 2.5rem;

    @media (width < 48rem) {
      display: none;
    }

    :any-link {
      font-weight: 300;
      font-size: 1.25rem;
      color: inherit;
      text-decoration: none;
    }
  }
}

/* general sections style */
section {
  padding-block: 7dvb;

  h2 {
    font-size: clamp(3rem, 6vw, 6rem);
    line-height: 1;
    letter-spacing: -0.15rem;
    font-weight: 300;
    text-shadow: 0 0 1px currentColor;
  }

  h3 {
    margin-block: 2rem;
    font-size: clamp(1.6rem, 4.5vw, 4.5rem);
    font-weight: 400;
  }

  p {
    font-size: 1.1rem;
    line-height: 1.5;
  }
}

/* general hero style */

.hero {
  min-block-size: 100dvb;

  @supports (animation-timeline: view()) {
    block-size: 100dvb;
    inline-size: 100vw;
    position: sticky;
    top: 0;
    grid-area: 1 / 1;

    --moveup: -100dvb;
    animation: linear moveup 1 forwards;
    animation-timeline: --page;
    animation-range: entry 200dvb entry 300dvb;

    ~ main {
      margin-block-start: 1dvb;
      min-block-size: 100dvb;
    }
  }

  h2 {
    font-size: clamp(2.5rem, 8vw, 8rem);
    font-weight: 320;
    text-shadow: none;
    max-inline-size: 12ch;
  }

  > div {
    block-size: 100%;
    display: grid;
    align-items: center;
    margin-inline: 10vw;
  }

  :any-link {
    --hover: 0;
    background-color: rgba(85, 183, 107, var(--hover));
    transition: all 0.33s;

    &:hover {
      color: #fff;
      border-color: transparent;
      --hover: 1;
    }
  }

  [href^='#'] {
    position: absolute;
    border-radius: 50%;
    border: 0;
    bottom: 3rem;
    left: calc(50% - 2rem);
    block-size: 4rem;
    padding: 0.75rem;
    aspect-ratio: 1;
    color: inherit;

    @media (prefers-reduced-motion: no-preference) {
      --moveup: -1rem;
      animation: moveup 1s cubic-bezier(0.5, 0, 1, 0.5) infinite alternate;

      &:hover {
        animation-play-state: paused;
      }
    }

    @supports (not (animation-timeline: view())) {
      display: none;
    }
  }

  svg {
    transform: rotateZ(0.25turn);
    inline-size: 100%;
    aspect-ratio: 1;
    fill: currentColor;
  }

  .hero__content {
    display: flex;
    align-items: start;
    flex-direction: column;
    gap: 2rem;
  }

  :where(:any-link) {
    --hover: 0;
    color: inherit;
    text-decoration: none;
    border-radius: 1.5rem;
    padding: 0.75rem 2rem;
    /* font-size: 92%; */
    font-weight: 600;
    letter-spacing: 0;
    border: 1px solid currentColor;
  }
}

/* 2nd hero hidden */
#shape-the-future {
  color: #fdfdfd;
  background: linear-gradient(125deg, rgb(213, 220, 186), rgba(85, 183, 107));

  @supports (animation-timeline: view()) {
    clippath: url('#blob');
  }

  > div {
    gap: 10vw;

    @supports (animation-timeline: view()) {
      grid-template-columns: 55vw auto;

      translate: 0 0;
      will-change: translate;
      animation: ease-out scroll 1 forwards;
      animation-timeline: --page;
      animation-range: entry 100dvb entry 200dvb;
    }
  }

  ul {
    display: flex;
    block-size: calc(100dvb - 10rem);

    @supports (not (animation-timeline: view())) {
      border-inline-end: 1px #fff solid;
      block-size: auto;

      @media (width < 40rem) {
        flex-direction: column;
        border-inline: 0;
      }
    }
  }

  li {
    flex: 1;
    display: flex;
    align-items: center;
    padding-inline: 2.5rem;
    border-inline-start: 1px #fff solid;
    inline-size: var(--items);

    h3,
    p {
      text-align: left;
    }

    span:has(img),
    img {
      max-block-size: 30dvmin;
    }

    @media (width < 48rem) {
      span:has(img),
      img {
        display: none;
      }
    }

    @supports (not (animation-timeline: view())) {
      inline-size: auto;

      h3,
      p {
        text-align: center;
      }

      @media (width < 40rem) {
        border-inline: 0;

        &:not(:last-child) {
          padding-block-end: 3rem;
          border-block-end: 1px #fff solid;
        }
      }
    }
  }
}

main {
  section {
    min-block-size: 100dvb;

    @media (prefers-reduced-motion: no-preference) {
      opacity: 0;
      transform: translateY(6rem);
      animation: ease-out reveal 1 forwards;
      animation-timeline: view();
      animation-range: cover 10% cover 30%;
    }

    > div {
      padding-inline: 10vw;
    }
  }

  .news {
    margin-block-start: 5dvb;

    li {
      padding-block: 2dvb;
      border-bottom: 1px solid;
      container: article / inline-size;
      --hover: 0;

      &:hover {
        --hover: 1;
      }
    }

    article {
      position: relative;
      display: grid;
      grid-template-columns: minmax(15vw, 22rem) auto;

      @container article (width <=48rem) {
        grid-template-columns: 1fr;
      }

      align-items: center;
      gap: 2rem;
      opacity: calc(0.7 + (var(--hover) * 0.3));
      transition: opacity 0.33s;
    }

    div {
      aspect-ratio: 1.8 / 1;
      overflow: hidden;
      border-radius: 1rem;
      inline-size: 100%;

      @container article (width <=48rem) {
        display: none;
      }

      img {
        object-fit: cover;
        block-size: 100%;
        inline-size: 100%;
      }
    }

    :any-link {
      display: grid;
      grid-template: auto auto / 1fr minmax(2.5rem, 6cqi);
      gap: 1rem min(5vw, 5rem);
      justify-content: space-between;
      align-items: center;
      color: inherit;
      text-decoration: none;

      [itemprop='author'] {
        grid-area: 1 / 1 / 2 / 3;
        font-size: 1rem;
        line-height: 1.33;
        color: #847c79;
        flex: 1 0 100%;
      }

      [itemprop='name'] {
        grid-area: 2 / 1 / 3 / 2;
        flex-wrap: nowrap;
        font-size: clamp(1.35rem, 2.6vw, 2.1rem);
        line-height: 1.33;
      }

      &:hover [itemprop='name'] {
        text-decoration: underline;
      }

      &::before {
        content: '';
        position: absolute;
        inset: 0;
      }
    }

    svg {
      grid-area: 1 / 2 / 3 / 3;
      aspect-ratio: 1;
      padding: 0.75rem;
      inline-size: 100%;
      border-radius: 50%;
      border: 2px solid;
      clip-path: polygon(18% 0, 100% 0, 100% 100%, 18% 100%);
      color: #645c59;
      fill: currentColor;
      transition: transform 0.33s;
      transform: rotateZ(calc(var(--hover) * 0.25turn));
    }
  }
}

/* show header on scrollup and hide on scrolldown  
  * original demo: https://codepen.io/fcalderan/pen/LYKwyyd
  */

@property --scroll-direction {
  syntax: '<number>';
  inherits: true;
  initial-value: 0;
}

@property --scroll {
  syntax: '<number>';
  inherits: true;
  initial-value: 0;
}

@property --scroll-delayed {
  syntax: '<number>';
  inherits: true;
  initial-value: 0;
}

@keyframes adjust-pos {
  to {
    --scroll: 10000;
    --scroll-delayed: 10000;
  }
}

/*  :root {
     animation: adjust-pos linear both;
     animation-timeline: scroll(root);
 } */

body {
  transition: --scroll-delayed 0.55s linear;
  --scroll-velocity: calc(var(--scroll) - var(--scroll-delayed));
  --scroll-speed: max(var(--scroll-velocity), -1 * var(--scroll-velocity));
  --scroll-direction: calc(var(--scroll-velocity) / var(--scroll-speed));
}

header {
  transition: transform 0.5s 0s;
  transform: translateY(var(--translate));
  background: #fff9;

  @container style(--scroll-direction: 0) {
    transition-delay: calc(infinity * 1s);
  }

  @container style(--scroll-direction: -1) {
    --translate: 0;
  }

  @container style(--scroll-direction: 1) {
    --translate: calc(-100% - 2px);
  }
}

/* show warning */

.warning {
  display: none;
  position: fixed;
  inset: 0;
  z-index: 100;
  place-content: center;
  font-size: 2rem;

  p {
    position: relative;
    background: #fff;
    padding: 3rem;
    font-weight: 400;
    border: 3px rgba(223, 151, 132) solid;
    border-radius: 1rem;
    inline-size: min(45rem, 85vw);
    box-shadow: 0 0 0 50vmax rgba(131, 163, 172, 0.7);
    -webkit-background-clip: text;
    color: transparent;
    background-image: linear-gradient(
      125deg,
      rgb(131, 163, 172),
      rgba(223, 151, 132)
    );

    &::before {
      content: '⚠️' / 'warning!';
      position: absolute;
      inset: 0;
      z-index: -1;
      background: #fff;
    }
  }
}

body:hover .warning {
  @supports (not (animation-timeline: view())) {
    display: grid;
  }
}

/* fix images */
span:has(> img) {
  aspect-ratio: 86 / 100;
  display: block;
  overflow: hidden;

  img {
    inline-size: 115%;
    max-inline-size: 115%;
  }
}
